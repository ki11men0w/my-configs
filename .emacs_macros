;перемещение текущей строки в самый верх окна
(fset 'l
   "\C-u0\C-l")

;создает закрывающий тэг
(fset 'x
   [?\C-a ?\C-  down ?\M-w ?\C-y up ?\M-m right ?/ ?\C-\M-s ?  ?\\ ?| ?> left ?\C-  ?\C-s ?> left ?\C-w right ?\C-  ?\C-e ?\C-w up ?\C-e return tab ?\C-q tab])

;вставляет тэг xsl:choose
(fset 'choose-tag-insert
   [?< ?x ?s ?l ?: ?c ?h ?o ?o ?s ?e ?> ?\C-a ?\C-  down ?\M-w ?\C-y up ?\M-m right ?/ up ?\C-e return tab ?\C-q tab ?< ?x ?s ?l ?: ?w ?h ?e ?n ?  ?t ?e ?s ?t ?= ?" ?" ?> return tab ?< ?/ ?x ?s ?l ?: ?w ?h ?e ?n ?> return tab ?< ?x ?s ?l ?: ?o ?t ?h ?e ?r ?w ?i ?s ?e ?> ?\C-a ?\C-  down ?\M-w ?\C-y up ?\M-m right ?/ up up up ?\C-e left left])

;вставляет тэг xsl:value-of
(fset 'valueof-tag-insert
   [?< ?x ?s ?l ?: ?v ?a ?l ?u ?e ?- ?o ?f ?  ?s ?e ?l ?e ?c ?t ?= ?" ?" ?/ ?> left left left])

;вставляет тэг xsl:if
(fset 'if-tag-insert
   [?< ?x ?s ?l ?: ?i ?f ?  ?t ?e ?s ?t ?= ?" ?" ?> return tab ?< ?x ?s ?l ?: ?i ?f ?> left left left left left left left ?/ up ?\C-e left left])

;вставляет тэг xsl:when
(fset 'when-tag-insert
   [?< ?x ?s ?l ?: ?w ?h ?e ?n ?  ?t ?e ?s ?t ?= ?" ?" ?> return tab ?< ?/ ?x ?s ?l ?: ?w ?h ?e ?n ?> up ?\C-e left left])

;окружает выделенную информащию тагом который вверху
(fset 'wrap-tag-insert
   [?\C-x ?r ?  ?/ ?\C-x ?\C-x ?\C-x ?r ?  ?. ?\C-u ?8 ?\C-x tab ?\C-  up ?\M-w ?\C-x ?r ?j ?/ ?\C-y up ?\M-m right ?/ ?\C-\M-s ?  ?\\ ?| ?> left ?\C-  ?\C-s ?> left ?\C-w ?\C-x ?r ?j ?. up ?\C-e left])

;вставляет тэг xsl:for-each
(fset 'foreach-tag-insert
   [?< ?x ?s ?l ?: ?f ?o ?r ?- ?e ?a ?c ?h ?> ?\C-a ?\C-  down ?\M-w ?\C-y up ?\M-m right ?/ up ?\C-e ?\C-j ?\C-q tab up ?\C-e left ?  ?s ?e ?l ?e ?c ?t ?= ?" ?" left])

;окружает тэгом xsl:text выделенный текст
(fset 'text-tag-arround-selection
   "\C-xr /\C-x\C-x\C-xr .<xsl:text>\C-xrj/</xsl:text>\C-xrj.\C-stext>\C-m")

;вставляет тэг xsl:call-template
(fset 'calltemplate-tag-insert
   [?< ?x ?s ?l ?: ?c ?a ?l ?l ?- ?t ?e ?m ?p ?l ?a ?t ?e ?  ?n ?a ?m ?e ?= ?" ?" ?> return tab ?< ?/ ?x ?s ?l ?: ?c ?a ?l ?l ?- ?t ?e ?m ?p ?l ?a ?t ?e ?> up ?\C-e return tab ?\C-q tab ?< ?x ?s ?l ?: ?w ?i ?t ?h ?- ?p ?a ?r ?a ?m ?  ?n ?a ?m ?e ?= ?" ?" ?  ?s ?e ?l ?e ?c ?t ?= ?" ?" ?> up ?\C-e left left])

;очищает список файлов в ChangeLog от промежутков
(fset 'changelog-clear-file-list
   [?\C-x ?r ?  ?/ ?\C-x ?\C-x ?\C-x ?r ?  ?. ?\M-x ?q ?u ?e ?r ?y ?  ?r ?e ?p ?l ?a ?c ?e ?  ?r ?e ?g ?e ?x ?p return ?^ ?[ ?\C-q ?  ?\C-q tab ?] ?* ?\C-q ?\C-j return return ?! ?\C-x ?\C-x ?\C-x ?\C-x ?\C-  up down ?\C-x ?r ?j ?/ ?\C-  ?\C-x ?r ?j ?. ?\M-x up down ?q ?u ?e ?r ?y ?  ?r ?e ?p ?l ?a ?c ?e ?  ?r ?e ?g ?e ?x ?p return ?  ?( ?M ?o ?d ?u ?k ?e backspace backspace ?l ?e ?) ?: ?\C-q ?  ?* ?$ return return ?! return])

;находит тело паскалевской функции по ее обьявлению
(fset '\.
   [?\C-x ?r ?  ?/ ?\C-a ?\C-\M-s ?\\ ?b ?\\ ?( ?f ?u ?n ?c ?t ?i ?o ?n ?\\ ?| ?p ?r ?o ?c ?e ?d ?u ?r ?e ?\\ ?| ?c ?o ?n ?s ?t ?r ?u ?c ?t ?o ?r ?\\ ?| ?d ?e ?s ?t ?r ?u ?c ?t ?o ?r ?\\ ?) ?\\ ?b ?\C-m ?\C-  ?\M-b ?\C-x ?r ?s ?, ?\M-f ?\C-\M-s ?[ ?^ ?\C-q ?  ?] ?\C-m left ?\C-  ?\M-f ?\C-x ?r ?s ?. ?\C-u ?\C-  ?\C-x ?r ?j ?/ ?\M-x ?s ?e ?a ?r ?c ?h ?- ?f ?o ?r ?w ?a ?r ?d ?- ?r ?e ?g ?e ?x ?p return ?\\ ?b ?\C-x ?r ?i ?, ?\C-e ?\\ ?b ?\C-q ?  ?+ ?. ?+ ?\\ ?. ?\C-x ?r ?i ?. ?\C-e ?\\ ?b return])

(fset 'stag
   [?\C-x ?r ?  ?/ ?\M-b ?\C-  ?\M-f ?\C-x ?r ?s ?' ?\C-x ?r ?j ?/ ?\C-x ?5 ?o ?\C-x ?1 ?\C-x ?b ?t ?a ?p ?3 ?1 ?0 ?. ?p ?y return home ?\M-x ?s ?e ?a ?r ?c ?h ?- ?f ?o ?r ?w ?a ?r ?d return ?. ?\C-x ?r ?i ?' ?\C-e ?. return ?\M-b left])

;оформляет выделенный регион в виде паскалевской строки
(fset 'delphi-my-make-string
   [?\C-x ?n ?n ?\M-x ?q ?u ?e ?r ?y ?- ?r ?e ?p ?l ?a ?c ?e return ?' return ?' ?' return ?! home ?\M-x ?q ?u ?e ?r ?y ?- ?r ?e ?p ?l ?a ?c ?e ?- ?r ?e ?g ?e ?x ?p return ?  ?+ ?$ return return ?! home ?\C-  end up ?\C-x ?r ?t ?' return home ?\M-x ?q ?u ?e ?r ?y ?- ?r ?e ?p ?l ?a ?c ?e ?- ?r ?e ?g ?e ?x ?p return ?$ return ?' ?  ?+ ?C ?R ?L ?F ?+ return ?! backspace ?\; home ?\C-  end ?\M-x ?a ?l ?i ?g ?n ?- ?r ?e ?g ?e ?x ?p return ?' ?  ?\\ ?+ ?C ?R ?L ?F return ?\C-  home ?\M-x ?u ?n ?t ?a ?b ?i ?f ?y return end ?\C-  home ?\C-x ?n ?w ?\C-\M-\\])

; фоформляет выделенный участок буфера в виде SQL
(fset 'insert-sql-into-delphi
   (lambda (&optional arg) "Keyboard macro." (interactive "p") (kmacro-exec-ring-item (quote ([24 114 32 46 24 24 24 114 32 44 134217765 39 return 39 39 return 33 24 114 106 46 67108896 24 114 106 44 201326629 94 return 65 100 100 40 39 return 33 5 24 114 32 46 67108896 24 114 106 44 1 24 114 32 44 201326629 36 return 39 41 59 return 33 67108896 114 32 46 31 24 114 32 46 24 24 67108896 24 114 106 44 134217848 97 108 105 103 110 32 114 101 103 101 32 return 39 41 59 36 return 24 24 134217756] 0 "%d")) arg)))
